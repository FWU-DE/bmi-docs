"use strict";(self.webpackChunkfwu_bmi_docs=self.webpackChunkfwu_bmi_docs||[]).push([[9539],{28453:(e,s,a)=>{a.d(s,{R:()=>c,x:()=>r});var t=a(96540);const i={},d=t.createContext(i);function c(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(d.Provider,{value:s},e.children)}},62773:(e,s,a)=>{a.r(s),a.d(s,{Badge:()=>p,Bullet:()=>l,Details:()=>h,SpecifiedBy:()=>x,assets:()=>o,contentTitle:()=>n,default:()=>b,frontMatter:()=>r,metadata:()=>t,toc:()=>j});const t=JSON.parse('{"id":"sodixapi/types/scalars/id","title":"ID","description":"The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \\"4\\") or integer (such as 4) input value will be accepted as an ID.","source":"@site/docs/sodixapi/types/scalars/id.mdx","sourceDirName":"sodixapi/types/scalars","slug":"/sodixapi/types/scalars/id","permalink":"/bmi-docs/docs/sodixapi/types/scalars/id","draft":false,"unlisted":false,"editUrl":"https://github.com/fwu-de/bmi-docs/tree/main/docs/sodixapi/types/scalars/id.mdx","tags":[],"version":"current","frontMatter":{"id":"id","title":"ID"},"sidebar":"fwuSidebar","previous":{"title":"Boolean","permalink":"/bmi-docs/docs/sodixapi/types/scalars/boolean"},"next":{"title":"Int","permalink":"/bmi-docs/docs/sodixapi/types/scalars/int"}}');var i=a(74848),d=a(28453),c=a(96540);const r={id:"id",title:"ID"},n=void 0,o={},l=()=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})}),x=e=>(0,i.jsxs)(i.Fragment,{children:["Specification",(0,i.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),p=e=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)("span",{className:e.class,children:e.text})}),h=({dataOpen:e,dataClose:s,children:a,startOpen:t=!1})=>{const[d,r]=(0,c.useState)(t);return(0,i.jsxs)("details",{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,i.jsx)("summary",{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"},children:d?e:s}),d&&a]})},j=[{value:"Member Of",id:"member-of",level:3}];function u(e){const s={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"ID"})," scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as ",(0,i.jsx)(s.code,{children:'"4"'}),") or integer (such as ",(0,i.jsx)(s.code,{children:"4"}),") input value will be accepted as an ID."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-graphql",children:"scalar ID\n"})}),"\n",(0,i.jsx)(s.h3,{id:"member-of",children:"Member Of"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/class-level",children:(0,i.jsx)(s.code,{children:"ClassLevel"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/competence",children:(0,i.jsx)(s.code,{children:"Competence"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/count-all-metadata",children:(0,i.jsx)(s.code,{children:"countAllMetadata"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/educational-level",children:(0,i.jsx)(s.code,{children:"EducationalLevel"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/find-all-metadata",children:(0,i.jsx)(s.code,{children:"findAllMetadata"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/metadata",children:(0,i.jsx)(s.code,{children:"metadata"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/metadata",children:(0,i.jsx)(s.code,{children:"Metadata"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/paid-media-links",children:(0,i.jsx)(s.code,{children:"paidMediaLinks"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/publisher",children:(0,i.jsx)(s.code,{children:"publisher"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/publisher",children:(0,i.jsx)(s.code,{children:"Publisher"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/api/queries/source",children:(0,i.jsx)(s.code,{children:"source"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"query"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/source",children:(0,i.jsx)(s.code,{children:"Source"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"}),(0,i.jsx)(l,{}),(0,i.jsx)(s.a,{href:"/sodixapi/types/objects/subject",children:(0,i.jsx)(s.code,{children:"Subject"})}),"  ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"object"})]})]})}function b(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);