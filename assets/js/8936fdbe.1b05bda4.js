"use strict";(self.webpackChunkfwu_bmi_docs=self.webpackChunkfwu_bmi_docs||[]).push([[432],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(96540);const i={},o=t.createContext(i);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:s},e.children)}},74785:(e,s,n)=>{n.r(s),n.d(s,{Badge:()=>p,Bullet:()=>d,Details:()=>h,SpecifiedBy:()=>u,assets:()=>l,contentTitle:()=>a,default:()=>b,frontMatter:()=>c,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"sodixapi/api/queries/count-publishers","title":"countPublishers","description":"No description","source":"@site/docs/sodixapi/api/queries/count-publishers.mdx","sourceDirName":"sodixapi/api/queries","slug":"/sodixapi/api/queries/count-publishers","permalink":"/bmi-docs/docs/sodixapi/api/queries/count-publishers","draft":false,"unlisted":false,"editUrl":"https://github.com/fwu-de/bmi-docs/tree/main/docs/sodixapi/api/queries/count-publishers.mdx","tags":[],"version":"current","frontMatter":{"id":"count-publishers","title":"countPublishers"},"sidebar":"fwuSidebar","previous":{"title":"countCollections","permalink":"/bmi-docs/docs/sodixapi/api/queries/count-collections"},"next":{"title":"countSources","permalink":"/bmi-docs/docs/sodixapi/api/queries/count-sources"}}');var i=n(74848),o=n(28453),r=n(96540);const c={id:"count-publishers",title:"countPublishers"},a=void 0,l={},d=()=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})}),u=e=>(0,i.jsxs)(i.Fragment,{children:["Specification",(0,i.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),p=e=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)("span",{className:e.class,children:e.text})}),h=({dataOpen:e,dataClose:s,children:n,startOpen:t=!1})=>{const[o,c]=(0,r.useState)(t);return(0,i.jsxs)("details",{...o?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,i.jsx)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"},children:o?e:s}),o&&n]})},x=[{value:"Type",id:"type",level:3},{value:'<code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"int-",level:4}];function m(e){const s={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"No description"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-graphql",children:"countPublishers: Int\n"})}),"\n",(0,i.jsx)(s.h3,{id:"type",children:"Type"}),"\n",(0,i.jsxs)(s.h4,{id:"int-",children:[(0,i.jsx)(s.a,{href:"/sodixapi/types/scalars/int",children:(0,i.jsx)(s.code,{children:"Int"})})," ",(0,i.jsx)(p,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"Int"})," scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."]}),"\n"]})]})}function b(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);